---
- name: "Copy Springboot application"
  ansible.builtin.copy:
    remote_src: true
    src: "{{ sbi_workdir }}/{{ sbi_appjarname }}"
    dest: "{{ sbi_jar_location }}/"
    owner: "springboot"
    group: "springboot"
    mode: "{{ sbi_app_mode }}"
    seuser: system_u
    serole: object_r
    setype: springboot_lib_t
  become: "{{ sbi_become }}"
  notify:
    - "Start Springboot instance"
    - "Cleanup workdir"

- name: "Get conf structure"
  ansible.builtin.find:
    path: "{{ sbi_conf_src }}"
    recurse: true
    file_type: any
  register: sbi_find_conf_files
  delegate_to: localhost

- name: "Create the conf subdirectories in {{ sbi_appbase_conf_location }}"
  ansible.builtin.file:
    path: "{{ item.path | regex_replace(sbi_conf_src | regex_escape(), sbi_appbase_conf_location) }}"
    state: directory
    owner: springboot
    group: springboot
    mode: "{{ sbi_conf_mode }}"
    seuser: system_u
    serole: object_r
    setype: springboot_conf_t
  loop: "{{ sbi_find_conf_files.files }}"
  when: item.isdir
  become: "{{ sbi_become }}"

- name: "Copy Springboot conf files in {{ sbi_appbase_conf_location }}"
  ansible.builtin.template:
    src: "{{ item.path }}"
    dest: "{{ item.path | regex_replace(sbi_conf_src | regex_escape(), sbi_appbase_conf_location) }}"
    owner: springboot
    group: springboot
    mode: "{{ sbi_conf_mode }}"
    seuser: system_u
    serole: object_r
    setype: springboot_conf_t
  become: "{{ sbi_become }}"
  loop: "{{ sbi_find_conf_files.files }}"
  when: not item.isdir
  notify:
    - "Cleanup workdir"

- name: "Copy Springboot Java security properties file to {{ sbi_java_security_file }}"
  ansible.builtin.template:
    src: "{{ sbi_java_security_file_src }}"
    dest: "{{ sbi_java_security_file }}"
    owner: springboot
    group: springboot
    mode: "{{ sbi_conf_mode }}"
    seuser: system_u
    serole: object_r
    setype: springboot_conf_t
  become: "{{ sbi_become }}"
  when: sbi_java_security_file_src is defined and sbi_java_security_file_src|length > 0
  notify:
    - "Cleanup workdir"

- name: "Create and populate extra files subdirectory {{ sbi_extra_files_dest }}"
  when:
    - sbi_extra_files_src is defined and sbi_extra_files_src|length > 0
    - sbi_extra_files_dest is defined and sbi_extra_files_dest|length >0
  block:
    - name: "Create subdir sbi_extra_files_dest={{ sbi_extra_files_dest }}"
      # (in case is different than sbi_appbase,
      #   sbi_appbase_conf_location,
      #   and sbi_jar_location)
      ansible.builtin.file:
        path: "{{ sbi_extra_files_dest }}"
        state: directory
        owner: springboot
        group: springboot
        mode: "{{ sbi_extra_files_mode }}"
        seuser: system_u
        serole: object_r
      when: sbi_extra_files_dest != sbi_appbase and sbi_extra_files_dest != sbi_appbase_conf_location and sbi_extra_files_dest != sbi_jar_location
      become: "{{ sbi_become }}"
    - name: "Copy other/extra files needed by the application from {{ sbi_extra_files_dest }}"
      ansible.builtin.copy:
        src: "{{ sbi_extra_files_src }}/"
        dest: "{{ sbi_extra_files_dest }}/"
        owner: springboot
        group: springboot
        mode: "{{ sbi_extra_files_mode }}"
        seuser: system_u
        serole: object_r
      become: "{{ sbi_become }}"

- name: "Create and populate keystores subdirectory {{ sbi_keystores_dest }}"
  when:
    - sbi_keystores_src is defined and sbi_keystores_src|length > 0
    - sbi_keystores_dest is defined and sbi_keystores_dest|length >0
  block:
    - name: "Create subdir sbi_keystores_dest={{ sbi_keystores_dest }}"
    # (in case is different than sbi_appbase,
    #   sbi_appbase_conf_location=,
    #   sbi_extra_files_dest,
    #   and sbi_jar_location)
      ansible.builtin.file:
        path: "{{ sbi_keystores_dest }}"
        state: directory
        owner: springboot
        group: springboot
        mode: "{{ sbi_keystores_mode }}"
        seuser: system_u
        serole: object_r
        setype: springboot_auth_t
      become: "{{ sbi_become }}"
      when:
        - sbi_keystores_dest != sbi_appbase
        - sbi_keystores_dest != sbi_appbase_conf_location
        - sbi_keystores_dest != sbi_extra_files_dest
        - sbi_keystores_dest != sbi_jar_location

    - name: "Copy keystores & certificates from {{ sbi_keystores_dest }}"
      ansible.builtin.copy:
        src: "{{ sbi_keystores_src }}/"
        dest: "{{ sbi_keystores_dest }}/"
        owner: springboot
        group: springboot
        mode: "{{ sbi_keystores_mode }}"
        seuser: system_u
        serole: object_r
        setype: springboot_auth_t
      become: "{{ sbi_become }}"

- name: "Restore SELinux file contexts for Springboot instance"
  ansible.builtin.shell: >
    bash -c "/sbin/restorecon -RFi {{ sbi_appbase }} {{ sbi_log_dir }} {{ sbi_srv_dir }}"
  changed_when: true
  become: "{{ sbi_become }}"
