---
- name: "Copy Springboot application"
  copy:
    remote_src: yes
    src: "{{ sbi_workdir }}/{{ sbi_appjarname }}"
    dest: "{{ sbi_jar_location }}/"
    owner: "springboot"
    group: "springboot"
    mode: "{{ sbi_app_mode }}"
    seuser: system_u
    serole: object_r
    setype: springboot_lib_t
  become: "{{ sbi_become }}"
  notify:
    - "Start Springboot instance"
    - "Cleanup workdir"

- name: "Get conf structure"
  local_action:
    module: find
    path: "{{ sbi_conf_src }}"
    recurse: yes
    file_type: any
  register: sbi_find_conf_files

- name: "Create the conf subdirectories in {{ sbi_appbase_conf_location }}/"
  file:
    path: "{{ item.path | regex_replace(sbi_conf_src|regex_escape(), sbi_appbase_conf_location) }}"
    state: directory
    owner: springboot
    group: springboot
    mode: "{{ sbi_conf_mode }}"
    seuser: system_u
    serole: object_r
    setype: springboot_conf_t
  loop: "{{ sbi_find_conf_files.files }}"
  when: item.isdir
  become: "{{ sbi_become }}"

- name: "Copy Springboot conf files in {{ sbi_appbase_conf_location }}/"
  template:
    src: "{{ item.path }}"
    dest: "{{ item.path | regex_replace(sbi_conf_src|regex_escape(), sbi_appbase_conf_location) }}"
    owner: springboot
    group: springboot
    mode: "{{ sbi_conf_mode }}"
    seuser: system_u
    serole: object_r
    setype: springboot_conf_t
  become: "{{ sbi_become }}"
  loop: "{{ sbi_find_conf_files.files }}"
  when: not item.isdir
  notify:
    - "Cleanup workdir"
    - "restorecon_springboot_instance"

- name: "Copy Springboot Java security properties file to {{ sbi_java_security_file }}"
  template:
    src: "{{ sbi_java_security_file_src }}"
    dest: "{{ sbi_java_security_file }}"
    owner: springboot
    group: springboot
    mode: "{{ sbi_conf_mode }}"
    seuser: system_u
    serole: object_r
    setype: springboot_conf_t
  become: "{{ sbi_become }}"
  when: sbi_java_security_file_src is defined and sbi_java_security_file_src|length > 0
  notify:
    - "Cleanup workdir"
    - "restorecon_springboot_instance"

- block:
  - name: "Ensure the folder sbi_extra_files_dest={{ sbi_extra_files_dest }} exists (in case is different than sbi_appbase={{ sbi_appbase }} , sbi_appbase_conf_location={{ sbi_appbase_conf_location }} & sbi_jar_location={{ sbi_jar_location }})"
    file:
      path: "{{ sbi_extra_files_dest }}"
      state: directory
      owner: springboot
      group: springboot
      mode: "{{ sbi_extra_files_mode }}"
      seuser: system_u
      serole: object_r
    when: sbi_extra_files_dest != sbi_appbase and sbi_extra_files_dest != sbi_appbase_conf_location and sbi_extra_files_dest != sbi_jar_location
    become: "{{ sbi_become }}"

  - name: "Copy other/extra files needed by the application from {{ sbi_extra_files_src }}/ to {{ sbi_extra_files_dest }}/"
    copy:
      src: "{{ sbi_extra_files_src }}/"
      dest: "{{ sbi_extra_files_dest }}/"
      owner: springboot
      group: springboot
      mode: "{{ sbi_extra_files_mode }}"
      seuser: system_u
      serole: object_r
    become: "{{ sbi_become }}"
    notify:
      - "restorecon_springboot_instance"
  when: sbi_extra_files_src is defined and sbi_extra_files_src|length > 0 and sbi_extra_files_dest is defined and sbi_extra_files_dest|length >0

- block:
  - name: "Ensure the destination folder of the keystores & certificates (sbi_keystores_dest={{ sbi_keystores_dest}}) exists (in case is different than sbi_appbase={{ sbi_appbase }} , sbi_appbase_conf_location={{ sbi_appbase_conf_location }} , sbi_extra_files_dest={{ sbi_extra_files_dest }} & sbi_jar_location={{ sbi_jar_location }})"
    file:
      path: "{{ sbi_keystores_dest }}"
      state: directory
      owner: springboot
      group: springboot
      mode: "{{ sbi_keystores_mode }}"
      seuser: system_u
      serole: object_r
      setype: springboot_auth_t
    become: "{{ sbi_become }}"
    when: sbi_keystores_dest != sbi_appbase and sbi_keystores_dest != sbi_appbase_conf_location and sbi_keystores_dest != sbi_extra_files_dest and sbi_keystores_dest != sbi_jar_location

  - name: "Copy keystores & certificates from {{ sbi_keystores_src }}/ to {{ sbi_keystores_dest }}/"
    copy:
      src: "{{ sbi_keystores_src }}/"
      dest: "{{ sbi_keystores_dest }}/"
      owner: springboot
      group: springboot
      mode: "{{ sbi_keystores_mode }}"
      seuser: system_u
      serole: object_r
      setype: springboot_auth_t
    become: "{{ sbi_become }}"
    notify:
      - "restorecon_springboot_instance"
  when: sbi_keystores_src is defined and sbi_keystores_src|length > 0 and sbi_keystores_dest is defined and sbi_keystores_dest|length >0
